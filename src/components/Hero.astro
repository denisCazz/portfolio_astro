---
// src/components/Hero.astro
import { getLangFromUrl, useTranslations } from '../i18n/languages';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// You can switch between the 3 headline options by changing the number
const headlineOption = 1 as const; // Change to 1, 2, or 3 to test different options

// Get the appropriate content based on selected option
const getHeadlineContent = (option: number) => {
  switch (option) {
    case 1:
      return {
        headline: t('hero.headline1'),
        subtitle: t('hero.subtitle1'),
        cta: t('hero.cta1')
      };
    case 2:
      return {
        headline: t('hero.headline2'),
        subtitle: t('hero.subtitle2'),
        cta: t('hero.cta2')
      };
    case 3:
      return {
        headline: t('hero.headline3'),
        subtitle: t('hero.subtitle3'),
        cta: t('hero.cta3')
      };
    default:
      return {
        headline: t('hero.headline1'),
        subtitle: t('hero.subtitle1'),
        cta: t('hero.cta1')
      };
  }
};

const content = getHeadlineContent(headlineOption);
---

<section class="hero">
  <div class="container">
    <div class="hero-content">
      <h1 class="animate-fade-in-up">{t('hero.name')}</h1>
      <p class="hero-subtitle animate-fade-in-up">
        {content.headline}
      </p>
      <p class="hero-description animate-fade-in-up">
        {content.subtitle}
      </p>
      <div class="hero-cta animate-fade-in-up">
        <a href="#projects" class="btn btn-primary">
          <i class="fas fa-code"></i>
          {content.cta}
        </a>
        <a href="#contact" class="btn btn-secondary">
          <i class="fas fa-envelope"></i>
          {t('hero.secondary_cta')}
        </a>
      </div>
    </div>
  </div>
  
  <!-- Floating elements for visual appeal -->
  <div class="floating-elements">
    <div class="floating-element" style="top: 20%; left: 10%; animation-delay: 0s;">
      <i class="fas fa-database"></i>
    </div>
    <div class="floating-element" style="top: 30%; right: 15%; animation-delay: 1s;">
      <i class="fab fa-js-square"></i>
    </div>
    <div class="floating-element" style="bottom: 25%; left: 20%; animation-delay: 2s;">
      <i class="fas fa-code"></i>
    </div>
    <div class="floating-element" style="top: 60%; right: 25%; animation-delay: 3s;">
      <i class="fas fa-brain"></i>
    </div>
    <div class="floating-element" style="bottom: 40%; right: 10%; animation-delay: 4s;">
      <i class="fas fa-truck"></i>
    </div>
  </div>
</section>

<style>
  .hero-description {
    max-width: 600px;
    margin: 0 auto var(--space-8);
    font-size: 1.25rem;
    color: var(--text-secondary);
    line-height: 1.6;
  }

  .floating-elements {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
  }

  .floating-element {
    position: absolute;
    font-size: 2rem;
    color: var(--primary);
    opacity: 0.3;
    animation: float 6s ease-in-out infinite;
  }

  .floating-element:nth-child(2) {
    color: var(--secondary);
    animation-duration: 8s;
  }

  .floating-element:nth-child(3) {
    color: var(--accent);
    animation-duration: 7s;
  }

  .floating-element:nth-child(4) {
    color: var(--warning);
    animation-duration: 9s;
  }

  @media (max-width: 768px) {
    .floating-elements {
      display: none;
    }
    
    .hero-description {
      font-size: 1.125rem;
    }
  }
</style>


<script>
  // Modern intersection observer for animations
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        (entry.target as HTMLElement).style.animationPlayState = 'running';
      }
    });
  }, observerOptions);

  // Observe all animated elements
  document.querySelectorAll('.animate-fade-in-up').forEach(el => {
    (el as HTMLElement).style.animationPlayState = 'paused';
    observer.observe(el);
  });
</script>
